// <auto-generated />
using System;
using Hamurgueria.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Hamurgueria.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20241205034106_inicial")]
    partial class inicial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Hamurgueria.Business.Models.Categorization.Categorie", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("PathImage")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Categories", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("6caed206-0b6b-40b1-9441-c83370378185"),
                            Description = "Os melhores hambúrgueres tradicionais.",
                            Name = "Hambúrgueres Clássicos",
                            PathImage = "https://github.com/O-ian-carvalho/backend-hamburguer/blob/master/img/hamburguer.png?raw=true"
                        });
                });

            modelBuilder.Entity("Hamurgueria.Business.Models.Categorization.Status", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Status", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("16d057d7-f780-44b2-94a5-ff8d46a34eef"),
                            Name = "Pendente"
                        },
                        new
                        {
                            Id = new Guid("e7012da5-be93-476f-8092-8534cc5c2fbc"),
                            Name = "Concluído"
                        },
                        new
                        {
                            Id = new Guid("d264ed0f-5bc7-4dd0-83a5-98ea4ef2954f"),
                            Name = "Cancelado"
                        });
                });

            modelBuilder.Entity("Hamurgueria.Business.Models.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("StatusId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.Property<decimal>("Value")
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("Id");

                    b.HasIndex("StatusId");

                    b.HasIndex("UserId");

                    b.ToTable("Orders", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("08dd14b9-4f27-481b-8772-9bcb5362b24f"),
                            StatusId = new Guid("16d057d7-f780-44b2-94a5-ff8d46a34eef"),
                            UserId = new Guid("57d5da9c-627a-4b0b-94a3-a195d685d93d"),
                            Value = 15.99m
                        });
                });

            modelBuilder.Entity("Hamurgueria.Business.Models.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("BaseDescription")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<Guid>("CategorieId")
                        .HasColumnType("char(36)");

                    b.Property<string>("FullDescription")
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("PathImage")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("Id");

                    b.HasIndex("CategorieId");

                    b.ToTable("Products", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("b196e216-632b-4e8d-8e27-5972a84ff190"),
                            BaseDescription = "Pão, carne e queijo.",
                            CategorieId = new Guid("6caed206-0b6b-40b1-9441-c83370378185"),
                            FullDescription = "Pão brioche, carne suculenta e queijo cheddar.",
                            Name = "Cheeseburger",
                            PathImage = "https://github.com/O-ian-carvalho/backend-hamburguer/blob/master/img/hamburguer.png?raw=true",
                            Price = 15.99m
                        },
                        new
                        {
                            Id = new Guid("5b992599-618c-4b96-9afd-baaea7e817b4"),
                            BaseDescription = "Pão, carne, bacon e queijo.",
                            CategorieId = new Guid("6caed206-0b6b-40b1-9441-c83370378185"),
                            FullDescription = "Pão brioche, carne suculenta, bacon crocante e queijo cheddar.",
                            Name = "X-Bacon",
                            PathImage = "https://github.com/O-ian-carvalho/backend-hamburguer/blob/master/img/hamburguer.png?raw=true",
                            Price = 18.50m
                        });
                });

            modelBuilder.Entity("Hamurgueria.Business.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Users", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("57d5da9c-627a-4b0b-94a3-a195d685d93d"),
                            Email = "joao@gmail.com",
                            Name = "João Silva",
                            Password = "Senha123"
                        });
                });

            modelBuilder.Entity("OrderProduct", b =>
                {
                    b.Property<Guid>("OrdersId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("ProductsId")
                        .HasColumnType("char(36)");

                    b.HasKey("OrdersId", "ProductsId");

                    b.HasIndex("ProductsId");

                    b.ToTable("OrderProduct");
                });

            modelBuilder.Entity("Hamurgueria.Business.Models.Order", b =>
                {
                    b.HasOne("Hamurgueria.Business.Models.Categorization.Status", "Status")
                        .WithMany("Orders")
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Hamurgueria.Business.Models.User", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Status");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Hamurgueria.Business.Models.Product", b =>
                {
                    b.HasOne("Hamurgueria.Business.Models.Categorization.Categorie", "Categorie")
                        .WithMany("Products")
                        .HasForeignKey("CategorieId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Categorie");
                });

            modelBuilder.Entity("OrderProduct", b =>
                {
                    b.HasOne("Hamurgueria.Business.Models.Order", null)
                        .WithMany()
                        .HasForeignKey("OrdersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hamurgueria.Business.Models.Product", null)
                        .WithMany()
                        .HasForeignKey("ProductsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Hamurgueria.Business.Models.Categorization.Categorie", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("Hamurgueria.Business.Models.Categorization.Status", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("Hamurgueria.Business.Models.User", b =>
                {
                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
